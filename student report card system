#include <iostream>
using namespace std;

class Node {
public:
	int roll_no;
	string Name;
	string Class;
	int English, Hindi, Malayalam, Science, Maths;
	Node* next;
};

Node* head = new Node();

bool check(int x)
{
	
	if (head == NULL)
		return false;

	Node* t = new Node;
	t = head;

	
	while (t != NULL) {
		if (t->roll_no == x)
			return true;
		t = t->next;
	}

	return false;
}


void Insert_Record(int roll_no, string Name,
				string Class, int English, int Hindi, int Malayalam, int Science, int Maths)
{
	
	if (check(roll_no)) {
		cout << "Student with this "
			<< "record Already Exists\n";
		return;
	}

	
	Node* t = new Node();
	t->roll_no = roll_no;
	t->Name = Name;
	t->Class = Class;
	t->English = English;
	t->Hindi = Hindi;
	t->Malayalam = Malayalam;
	t->Science = Science;
	t->Maths = Maths;
	t->next = NULL;

	
	if (head == NULL
		|| (head->roll_no >= t->roll_no)) {
		t->next = head;
		head = t;
	}

	
	else {
		Node* c = head;
		while (c->next != NULL
			&& c->next->roll_no < t->roll_no) {
			c = c->next;
		}
		t->next = c->next;
		c->next = t;
	}

	cout << "Record Inserted "
		<< "Successfully\n";
}

void Search_Record(int roll_no)
{
	
	if (!head) {
		cout << "No such Record "
			<< "Available\n";
		return;
	}

	
	else {
		Node* p = head;
		while (p) {
			if (p->roll_no == roll_no) {
				cout << "Roll Number\t"
					<< p->roll_no << endl;
				cout << "Name\t\t"
					<< p->Name << endl;
				cout << "Class\t"
					<< p->Class << endl;
				cout << "English\t\t"
					<< p->English << endl;
				cout << "Hindi\t\t"
					<< p-> Hindi<< endl;
				cout << "Malayalam\t\t"
					<< p->Malayalam << endl;
				cout << "Science\t\t"
					<< p->Science << endl;
				cout << "Maths\t\t"
					<< p-> Maths<< endl;
				return;
			}
			p = p->next;
		}

		if (p == NULL)
			cout << "No such Record "
				<< "Available\n";
	}
}

int Delete_Record(int roll_no)
{
	Node* t = head;
	Node* p = NULL;

	
	if (t != NULL
		&& t->roll_no == roll_no) {
		head = t->next;
		delete t;

		cout << "Record Deleted "
			<< "Successfully\n";
		return 0;
	}

	
	while (t != NULL && t->roll_no != roll_no) {
		p = t;
		t = t->next;
	}
	if (t == NULL) {
		cout << "Record does not Exist\n";
		return -1;
		p->next = t->next;

		delete t;
		cout << "Record Deleted "
			<< "Successfully\n";

		return 0;
	}
}

void Show_Record()
{
	Node* p = head;
	if (p == NULL) {
		cout << "No Record "
			<< "Available\n";
	}
	else {
		cout << "Index\tName\tCourse"
			<< "\tEnglish\tHindi\tMaths\tMalayalam\tScience\n";

		
		while (p != NULL) {
			std::cout << p->roll_no << " \t";
				std::cout<< p->Name << "\t";
				std::cout<< p->Class << "\t";
				std::cout<< p->English << endl;
				std::cout<< p->Maths << endl;
				std::cout<< p->Malayalam << endl;
				std::cout<< p->Science << endl;
				std::cout<< p->Hindi << endl;
			p = p->next;
		}
	}
}


int main()
{
	head = NULL;
	string Name, Course;
	int Roll, English, Hindi, Maths, Malayalam, Science;

	
	while (true) {
		cout << "\n\t\tWelcome to Student Record "
				"Management System\n\n\tPress\n\t1 to "
				"create a new Record\n\t2 to delete a "
				"student record\n\t3 to Search a Student "
				"Record\n\t4 to view all students "
				"record\n\t5 to Exit\n";
		cout << "\nEnter your Choice\n";
		int Choice;

		
		cin >> Choice;
		if (Choice == 1) {
			cout << "Enter Name of Student\n";
			cin >> Name;
			cout << "Enter Roll Number of Student\n";
			cin >> Roll;
			cout << "Enter Course of Student \n";
			cin >> Course;
			cout << "Enter Marks for English\n";
			cin >> English;
			cout << "Enter Marks for Hindi\n";
			cin >> Hindi;
			cout << "Enter Marks for Maths\n";
			cin >> Maths;
			cout << "Enter Marks for Malayalam\n";
			cin >> Malayalam;
			cout << "Enter Marks for Science\n";
			cin >> Science;
			Insert_Record(Roll, Name, Course, English, Hindi, Maths, Malayalam, Science);
		}
		else if (Choice == 2) {
			cout << "Enter Roll Number of Student whose "
					"record is to be deleted\n";
			cin >> Roll;
			Delete_Record(Roll);
		}
		else if (Choice == 3) {
			cout << "Enter Roll Number of Student whose "
					"record you want to Search\n";
			cin >> Roll;
			Search_Record(Roll);
		}
		else if (Choice == 4) {
			Show_Record();
		}
		else if (Choice == 5) {
			exit(0);
		}
		else {
			cout << "Invalid Choice "
				<< "Try Again\n";
		}
	}
	return 0;
}
